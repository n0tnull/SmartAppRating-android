apply plugin: "com.android.library"
apply plugin: "com.jfrog.bintray"
apply plugin: "maven"
apply plugin: "maven-publish"

android {
  compileSdkVersion project.compileSdkVersion

  defaultConfig {
    minSdkVersion project.minSdkVersion
    targetSdkVersion project.compileSdkVersion
    versionCode 1
    versionName "1.2.0"
    resourcePrefix 'smartapprating_'
    consumerProguardFiles 'proguard-rules.pro'
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug
    {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

}

dependencies {
  implementation('androidx.appcompat:appcompat:1.0.0')
  implementation('androidx.constraintlayout:constraintlayout:1.1.3')
  implementation('androidx.annotation:annotation:1.0.0')

  // Jackson
  implementation("com.fasterxml.jackson.core:jackson-core:${jackson_library_version}")
  implementation("com.fasterxml.jackson.core:jackson-annotations:${jackson_library_version}")
  implementation("com.fasterxml.jackson.core:jackson-databind:${jackson_library_version}")

  // Webservice
  implementation("com.squareup.retrofit2:retrofit:${retrofit_library_version}")
  implementation("com.squareup.retrofit2:converter-jackson:${retrofit_library_version}")

  // SimpleRatingBar
  api("com.github.smartnsoft:SimpleRatingBar:5e0efc58bc")

  // Test
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.test:runner:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}


version = android.defaultConfig.versionName
def artifactGroup = "com.smartnsoft"
group = artifactGroup
def artifactName = "smartapprating"
description = "SmartAppRating is a simple library to ask user to rate your app if some condition are met"

task sourcesJar(type: Jar) {
  classifier = "sources"
  from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
  title = "SmartAppRating API"
  description "Javadoc for the SmartAppRating"
  source = android.sourceSets.main.java.srcDirs

  options.charSet = "UTF-8"
  options.overview = "src/main/javadoc/overview.html"
  options.links = ["http://docs.oracle.com/javase/7/docs/api/", "http://d.android.com/reference/"]

  classpath += project.files(project.android.getBootClasspath().join(File.pathSeparator))
  failOnError = false
}

afterEvaluate {
  javadoc.classpath += files(android.libraryVariants.collect { variant ->
    variant.javaCompile.classpath.files
  })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = "javadoc"
  from javadoc.destinationDir
  // options.encoding = 'UTF-8'
}

artifacts
{
  archives javadocJar
  archives sourcesJar
}

def pomConfig = {
  licenses
  {
    license
    {
      name "MIT License (MIT)"
      url "https://opensource.org/licenses/MIT"
      distribution "repo"
    }
  }
}

publishing
{
  publications
  {
    ReleasePublication(MavenPublication)
    {
      artifact sourcesJar
      artifact javadocJar
      groupId artifactGroup
      artifactId artifactName
      version android.defaultConfig.versionName

      pom.withXml
      {
        def root = asNode()
        root.appendNode("description", description)
        root.appendNode("name", "SmartAppRating")
        root.appendNode("url", "https://github.com/smartnsoft/SmartAppRating-android")
        root.children().last() + pomConfig
      }
    }
  }
}

//https://gist.github.com/bugs84/b7887fb5d7f9f2d484b8
publishing.publications.all
{
  pom.withXml
  {
    asNode().dependencies."*".findAll()
    {
      it.scope.text() == "runtime" && project.configurations.compile.allDependencies.find { dep ->
        dep.name == it.artifactId.text()
      }
    }.each
    {
      it.scope*.value = "compile"
    }
  }
}

bintray
{
  publications = ["ReleasePublication"]

  pkg
  {
    repo = "maven"
    name = "SmartAppRating"
    userOrg = "smartnsoft"
    licenses = ["MIT"]
    vcsUrl = "https://github.com/smartnsoft/SmartAppRating-android.git"
    publish = true

    version
    {
      name = android.defaultConfig.versionName
      desc = description
      vcsTag = artifactName + "-" + android.defaultConfig.versionName
    }
  }
}

uploadArchives
{
  repositories
  {
    mavenDeployer
    {
      repository(url: "https://api.bintray.com/maven/smartnsoft/maven/SmartAppRating/;publish=1")
      {
        authentication(userName: findProperty("bintrayUsername") ?: "", password: findProperty("bintrayKey") ?: "")
      }

      snapshotRepository(url: findProperty("nexusSnapshotUrl") ?: "")
      {
        authentication(userName: findProperty("nexusUsername") ?: "", password: findProperty("nexusPassword") ?: "")
      }

      pom.project
      {
        name artifactName
        groupId artifactGroup
        artifactId artifactName
        version android.defaultConfig.versionName
        packaging "aar"
      }
    }
  }
}
